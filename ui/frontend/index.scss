@import "~normalize.css/normalize.css";

$background: #E1E1DB;
$rust: #AA4422;
$selected-radio: desaturate(lighten($rust, 30%), 20%);
$unselected-radio: lighten($selected-radio, 20%);
$border-color: #BBBBBB;
$border: 1px solid $border-color;

$primary-font: 'Open Sans', sans-serif;

// Modify normalized styles
button,
input,
optgroup,
select,
textarea {
    font-family: $primary-font;
}

html {
    box-sizing: border-box;
}
*, *:before, *:after {
    box-sizing: inherit;
}

body {
    background-color: $background;
    padding: 0 1em;
    font-family: $primary-font;
}

@mixin split-first-child() {
    // the first child, i.e. the editor has the border already
    margin-top: 0;
    margin-bottom: 0;
    margin-left: 0;
}

@mixin split-all-children() {
    // space between the split
    margin-left: 0.5em;

    // FIXME: remove this, when the output-rules are 'aware' of the orientation
    //        (this disables the extra margin-top for the spacing between editor
    //        and output in the horizontal split mode)
    margin-top: -0.2em;

    // for the border of the editor
    margin-bottom: 4px;
}

.playground {
    display: flex;
    height: 100vh;
    flex-direction: column;

    padding-bottom: 1em;

    &-split {
        display: flex;
        height: 100vh;

        &-automatic {
            @media screen and (max-width: 1600px) {
                flex-direction: column;
            }

            @media screen and (min-width: 1600px) {
                flex-direction: row;
            }
        }

        &-horizontal {
            flex-direction: column;
        }

        &-vertical {
            flex-direction: row;
        }

        &-vertical > *:first-child {
            @include split-first-child();
        }

        // automatic vertical
        &-automatic > *:first-child {
            @media screen and (min-width: 1600px) {
                @include split-first-child();
            }
        }

        &-vertical > * {
            @include split-all-children();
        }

        // automatic vertical
        &-automatic > * {
            @media screen and (min-width: 1600px) {
                @include split-all-children();
            }
        }
    }

    &-editor {
        flex: 1 1 auto;
        position: relative;

        border: 4px solid $border-color;
        border-radius: 4px;
    }

    &-output {
        &-focused {
            flex: 1 1 auto;
            position: relative;
        }
    }
}

.configuration {
    position: relative;
    width: 100%;
    height: 100%;

    &-item {
        display: flex;
        margin-bottom: 0.5em;
    }

    &-label {
        flex: 1 1 100%;
    }

    &-value {
        flex: 1 1 100%;
    }

    &-actions {
        right: 0;
        bottom: 0;
        position: absolute;
    }
}

@mixin body-monospace {
    font-size: 0.9em;
    // http://code.stephenmorley.org/html-and-css/fixing-browsers-broken-monospace-font-handling/
    // ACE uses Monaco, Menlo, "Ubuntu Mono", Consolas, source-code-pro, monospace;
    font-family: 'Source Code Pro', monospace;
}

.header {
    display: flex;
    align-items: center;
    padding: 1.25em 0;
}

.header-set {
    $radius: 5px;

    display: flex;
    align-items: center;
    position: relative;

    margin-left: 1em;
    &:first-of-type {
        margin-left: 0;
    }

    &__buttons {
        display: flex;

        border-radius: $radius;
        overflow: hidden;
        background: white;
        border: $border;

        &--primary {
            border-left: 0;
            border-top-left-radius: 0;
            border-bottom-left-radius: 0;
        }

        &--radio {
            background-color: $unselected-radio;
            border: 1px solid $rust;
        }
    }

    &__btn {
        padding: 0.5em;
        border: none;
        border-left: $border;
        background: none;

        &:enabled {
            cursor: pointer;
        }

        text-decoration: none;
        color: #000;

        &:nth-child(1) {
            border-left: 0;
        }

        &:hover:enabled {
            background-color: darken(white, 10%);
        }

        &:disabled {
            color: rgba(0, 0, 0, 0.5);
        }

        &--primary {
            background-color: $rust;

            color: white;
            font-size: 1.5rem;

            border-radius: $radius;
            border: none;

            &:after {
                content: " โถ";
            }

            &:hover:enabled {
                background-color: darken($rust, 10%);
            }
        }
    }

    &__radio {
        display: none;

        &-label {
            padding: 0.5em;
            cursor: pointer;
            border-right: 1px solid $rust;

            &:last-child {
                border-right: 0;
            }

            &:hover {
                background-color: desaturate($selected-radio, 10%);
            }

            :checked + & {
                background-color: $selected-radio;
                cursor: default;
            }
        }
    }

    &__title {
        position: absolute;
        width: 90%;
        left: 50%;
        transform: translateX(-50%);
        bottom: 100%;

        text-align: center;
        background-color: rgba(255, 255, 255, 0.5);
        border-radius: $radius $radius 0 0;
        font-size: 0.7rem;
    }
}

#editor {
    position: absolute;
    // Height / width is applied to the element
    @include body-monospace;
}

.editor {
    &-simple {
        position: absolute;
        width: 100%;
        height: 100%;

        border: none;
        @include body-monospace;
    }
}

.output {
    $current-tab: #f9ffff;
    $background-tab: desaturate($current-tab, 100%);

    display: flex;
    flex-direction: column;

    margin-top: 0.2em;

    .playground-output-focused & {
        position: absolute;
        width: 100%;
        height: 100%;
    }

    &-tabs {
        display: flex;
    }

    &-tab {
        flex: 1 1 auto;

        line-height: 1.5em;
        background-color: $background-tab;
        border: $border;
        border-right: none;

        cursor: pointer;

        &:last-of-type {
            border-right: $border;
        }

        &-selected {
            background-color: $current-tab;
            border-bottom: none;

            cursor: default;

            &:focus {
                outline: none;
            }
        }

        &-close {
            flex: 0 0 auto;
        }
    }

    &-body {
        height: 100%;
        overflow: scroll;

        background-color: $current-tab;
        border: $border;
        border-top: none;

        padding: 0.5em;
    }

    &-header {
        display: flex;
        white-space: nowrap;
        color: $border-color;

        &:before, &:after {
            border-top: $border;
            content: '';
            flex: 1 1 auto;
            margin: auto;
        }
        &:before { margin-right: 2%; }
        &:after { margin-left: 2% }
    }

    code {
        @include body-monospace;
    }
}

.drop {
    &__toggle {
        font-size: 50%;
        height: 100%;
    }

    &__menu {
        display: none;

        position: absolute;
        top: 90%;
        left: 0;
        z-index: 10;

        margin: 0;
        padding: 0;

        border: $border;
        box-shadow: 0.5px 0.5px 10px 1px rgba(0, 0, 0, 0.2);

        &--open {
            display: inherit;
        }
    }

    &__menu-item {
        list-style: none;
        white-space: nowrap;
        border-bottom: $border;
        &:last-child {
            border-bottom: none;
        }
    }

    &__button {
        width: 100%;
        background: white;
        border: none;
        cursor: pointer;
        text-align: left;
        &:hover {
            background-color: darken(white, 10%);
        }
    }
}

$PHI: 2.61803398875;

.modal {
    &-backdrop {
        position: fixed;
        left: 0;
        right: 0;
        top: 0;
        bottom: 0;
        background-color: rgba(0, 0, 0, 0.5);
        z-index: 10;
    }

    &-content {
        margin: 0 auto;
        background-color: #FFF;
        border: 1px solid black;
        padding: 1em;
        margin-top: 10em;

        width: 600px;
        height: 950px / $PHI;
    }
}

@keyframes loader-fade {
    0% {
        opacity: 0;
    }
    75% {
        opacity: 1;
    }
}

.loader {
    &-dot {
        opacity: 0;
        animation: loader-fade 1s;
        animation-iteration-count: infinite;

        &:nth-child(2) {
            animation-delay: 0.2s;
        }

        &:nth-child(3) {
            animation-delay: 0.4s;
        }
    }
}

.language-rust_errors {
    .warning {
        color: #f79a06;
    }
    .error {
        color: #bf1b1b;
    }
}

.help {
    @import "~prismjs/themes/prism-okaidia";

    max-width: 800px;
    background-color: #fff;
    margin: 1em auto;
    padding: 1em;
    line-height: 1.5;

    &__code {
        background: #EEE;
        padding: 0 0.25em;
    }

    &__logo {
        text-align: center;
    }

    &__header:hover:after {
        content: ' ยง';
    }

    &__header-link {
       color: black;
       text-decoration: none;

       &:hover {
           text-decoration: underline;
       }
    }

    &__example {
        position: relative;
    }

    &__load_example {
        position: absolute;
        right: 0;
        top: 0;
        border: none;
        background: rgba(255, 255, 255, 0.8);
        border-bottom-left-radius: 0.5em;
        visibility: hidden;
        opacity: 0;
        transition: all 0.5s;
        cursor: pointer;
    }

    &__example:hover &__load_example {
        visibility: visible;
        opacity: 1;
    }
}

$header-tint: #428bca;
$header-main-border: #dedede;
$header-accent-border: #bdbdbd;
$header-border-radius: 3px;
$header-transition: 0.2s ease-in-out;

.header2 {
  display: flex;
  font-family: $primary-font;
  font-size: 12px;

  .glue {
    flex: 1;
  }

  button:enabled {
    cursor: pointer;
  }
}

.header-button-container {
  display: flex;
  position: relative;

  border: 1px solid $header-main-border;
  border-bottom: 1px solid $header-accent-border;

  border-radius: $header-border-radius;
  box-shadow: 0 1px 4px -2px rgba(0, 0, 0, 0.6), inset 0 1px 0px white;

  &:not(.button-build-container) {
    margin-left: 7px;
  }
}

.header-button {
  height: 35px;
  line-height: 35px;

  padding: 0 15px;

  border-radius: $header-border-radius;

  text-transform: uppercase;
  text-decoration: none;

  font-weight: 600;

  color: #666;
  background-color: #fff;
  background: linear-gradient(#fff, #f9f9f9);

  white-space: nowrap;

  // Button reset
  border: none;
  text-align: inherit;
  line-height: inherit;

  .icon {
    opacity: 0.5;
  }

  &--expandable {
    padding-right: 30px;
  }

  &:hover {
    background: linear-gradient(#fff, #f3f3f3);
    color: #333;

    .icon {
      opacity: 0.7;
    }
  }

  &:active {
    background: linear-gradient(#f9f9f9, #ededed);
    box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.2);

    border-top-color: #bababa;
    border-bottom-color: #d6d6d6;
  }

  // specific buttons
  &--options-notify {
    &::before {
      content: "";

      top: calc(50% - 6px);
      left: calc(50% - 11px);
      width: 22px;
      height: 12px;

      position: absolute;

      border-radius: $header-border-radius;
      background: $header-tint;
      opacity: 0.8;
    }

    .icon {
      color: #fff;
      opacity: 1 !important;
    }
  }

  &--settings {
    padding-left: 30px;
  }

  &--help {
    padding-left: 25px;
  }
}

.segmented-button-container {
  .header-button {
    border-radius: 0;
    box-shadow: none;
  }

  .segmented-button {
    border-right-width: 0;
    border-top-left-radius: $header-border-radius;
    border-bottom-left-radius: $header-border-radius;

    position: relative;
  }

  .segmented-button-options {
    border-top-right-radius: $header-border-radius;
    border-bottom-right-radius: $header-border-radius;

    position: relative;

    background-color: #fff;
    border-left: 1px solid $header-main-border;
  }
}

.button-build-container {
  border: none;

  .button-build {
    font-weight: 700;

    background: $rust;
    color: white;

    margin-top: -1px;
    margin-bottom: -1px;
    height: 37px;

    border: 1px solid hsl(15, 66.7%, 32%);
    border-right-width: 0;

    padding-right: 30px;
    padding-left: 10px;

    .icon--play {
      opacity: 1;
    }

    &:hover {
      background: #80331a;
    }
  }

  .segmented-button-options {
    margin-top: -1px;
    margin-bottom: -1px;
    height: 37px;

    border: 1px solid $header-main-border;
    border-bottom: 1px solid $header-accent-border;
    border-left-width: 0;
  }

  .header-button:hover .icon--play {
    opacity: 1;
  }
}

.popper {
  z-index: 10;
  font-size: 12px;

  $fg-color: #222;
  $bg-color: white;
  $arrow-size: 10px;
  $vertical-border-color: #cacaca;

  &__arrow {
    position: absolute;
    margin: $arrow-size;
    border: $arrow-size solid transparent;
  }

  &[data-placement^="bottom"] &__arrow {
    margin-top: 0;
    border-top-width: 0;
    border-bottom-color: $bg-color;
  }

  &__content {
    background: $bg-color;
    color: $fg-color;

    margin: $arrow-size;

    border-radius: $header-border-radius;

    box-shadow: 0 1px 4px -2px rgba(0, 0, 0, 0.6), inset 0 1px 0px white;

    border-left: 1px solid $vertical-border-color;
    border-right: 1px solid $vertical-border-color;
    border-bottom: 1px solid $header-accent-border;
  }

  button:enabled {
    cursor: pointer;
  }
}

.menu-group {
  width: 25em;
  padding: 0.75em 1em;

  line-height: normal;

  &__title {
    margin: 0;

    text-transform: uppercase;
    font-weight: 700;
    font-size: 11px;
    padding-bottom: 10px;
    border-bottom: 1px solid $header-main-border;
  }
  /*
  &:last-child {
    margin-bottom: 10px;
  }
*/
}

.validate-options {
  margin-top: 5px;
  margin-bottom: 0 !important;

  padding-top: 10px;
  padding-bottom: 13px;

  background: #f4f4f4;

  border-top: 1px solid #cacaca;

  border-bottom-left-radius: $header-border-radius;
  border-bottom-right-radius: $header-border-radius;

  text-align: center;

  &__button {
    $bg-light: #fff;
    $bg-dark: #f9f9f9;

    display: inline-block;

    text-align: center;
    text-decoration: none;

    text-transform: uppercase;
    font-weight: 600;

    padding: 8px 15px;

    color: #666;

    border: 1px solid $header-main-border;
    border-bottom: 1px solid $header-accent-border;

    background: $bg-light;
    background: linear-gradient($bg-light, $bg-dark);
    border-radius: $header-border-radius;

    box-shadow: 0 1px 4px -2px rgba(0, 0, 0, 0.6), inset 0 1px 0px white;

    &:hover {
      background: linear-gradient($bg-light, #f3f3f3);
    }

    &:active {
      background: linear-gradient($bg-dark, #ededed);
      box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.2);

      border-top-color: #bababa;
      border-bottom-color: #d6d6d6;
    }
  }
}


// ideas
// popover item becomes bare class (margin, padding)
// another with header/description (check + kbd)


.popover-item {
  width: 100%;

  padding: 0;
  margin-top: 12px;
  color: #333;
  background: #fff;

  transition: color $header-transition;

  // Button reset
  border: none;
  text-align: inherit;
  line-height: inherit;

  &__name {
    font-size: 13px;
    font-weight: 600;
  }

  &__description {
    display: block;
    font-size: 12px;

    em {
      display: block;
      margin-top: 5px;

      font-weight: 600;
      font-style: normal;

      color: #888;
      transition: color $header-transition;

      a {
        color: $header-tint;
      }
    }
  }

  &:not(.advanced-options-item):hover {
    color: $header-tint;

    em {
      color: currentColor;
    }
  }
}

.selectable-item {
  &__header {
    position: relative;
  }

  &__description {
    margin-right: 10px;
  }

  .icon--checkmark {
    margin: 0 5px 0 5px;

    top: -2px;
    right: 0;

    opacity: 0;
    transition: opacity $header-transition;
  }

  &--selected {
    font-weight: 600;
    color: $header-tint;

    .icon--checkmark {
      opacity: 1;
    }
  }

  &:hover {
    .icon--checkmark {
      opacity: 0.5;
    }
  }
}

.boolean-config {
  display: flex;

  &__toggle {
    margin-left: auto;
  }

  input {
    display: none;
  }

  label {
    $border: 1px solid #bbb;

    flex: 1;

    text-transform: uppercase;
    font-size: 11px;
    font-weight: 600;
    color: #777;

    cursor: pointer;

    border: $border;
    border-top-left-radius: $header-border-radius;
    border-bottom-left-radius: $header-border-radius;
    border-right-width: 0;

    ~ label {
      border-right-width: 1px;
      border-left: $border;
      border-radius: 0 $header-border-radius $header-border-radius 0;
    }
  }

  :checked + label {
    border-color: $header-tint;
    background: $header-tint;
    color: #fff;

    ~ label {
      border-left-width: 0;
    }
  }
}

.advanced-options-menu {
  &__rustflags {
    width: 100%;
    margin-bottom: 9px;
  }
}

.shortcut-item {
  &__header {
    display: flex;
  }

  &__name {
    flex: 1;
  }

  kbd {
    font-family: "Source Code Pro";

    margin: 0 5px;

    border: 1px solid $header-main-border;
    border-radius: 4px;
    padding: 0.1em 0.5em;

    box-shadow: 0 1px 0px rgba(0, 0, 0, 0.1), 0 0 0 2px #fff inset;
    background-color: #fafafa;
    color: #888;
  }
}

.icon {
  position: absolute;
  top: 0;

  fill: currentColor;

  &--play {
    right: 8px;
    top: calc(50% - 10px);
  }

  &--more {
    left: calc(50% - 9px);
    top: calc(50% - 9px);
    opacity: 0.6;
  }

  &--expandable {
    top: calc(50% - 10px);
    right: 6px;
    color: #666;
  }

  &--settings {
    top: calc(50% - 7.5px);
    left: 9px;
    color: #888;
    opacity: 0.5;
  }

  &--help {
    top: calc(50% - 9px);
    left: calc(50% - 9px);
    color: #666;
  }
}
